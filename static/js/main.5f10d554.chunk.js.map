{"version":3,"sources":["Utils/localStorage.js","statemanagement/index.js","components/NotesList/styles.js","components/NotesList/Note.js","components/NotesList/index.js","components/NoteBooks/styles.js","components/NoteBooks/index.js","components/CreateNote/styles.js","components/CreateNote/Snackbar.js","components/CreateNote/index.js","Utils/Modal.js","Utils/ShowModal.js","components/MainComponent/styles.js","components/MainComponent/index.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","key","localStorage","getItem","value","setItem","removeItem","get","notebook","set","remove","notebok","id","getNotes","JSON","parse","object","List","length","filter","item","Lenguajes","getNotebooks","Experiencia","Diseno","Notes","getAllNotes","itemObject","notebookIs","updatedList","title","message","category","stringify","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","notes","modal","edit","show","showModal","state","action","type","useNoteStyles","makeStyles","theme","paper","backgroundColor","padding","spacing","color","palette","text","secondary","marginBottom","button","position","top","wordBreak","paddingBottom","useListStyles","root","flexGrow","margin","marginTop","textField","marginLeft","marginRight","formControl","width","moveToSelect","Note","props","row","classes","useStyles","dispatch","Paper","className","Grid","container","Divider","variant","ButtonGroup","aria-label","Button","onClick","NoteBookOfTheNote","getObjectsOfTheNoteBook","removeNote","note","rmNoteBook","NotesList","useState","mainData","setMainData","setState","setStateCategory","React","useEffect","Fragment","Typography","align","gutterBottom","noWrap","TextField","label","placeholder","fullWidth","onChange","e","event","target","searched","keyword","array","toSearch","toLowerCase","data","undefined","includes","searchFor","search","InputProps","endAdornment","InputAdornment","map","index","noteBooksContainer","minHeight","noteBookList","cursor","active","NoteBooks","activeNote","setActiveNote","showNotesOf","Notebook","All","demo","dense","ListItem","join","ListItemAvatar","Avatar","ListItemText","primary","display","flexWrap","menu","snackBarStyle","close","CustomSnackbar","setClose","openSnack","open","setOpen","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","IconButton","CreateNote","inputLabel","useRef","labelWidth","setLabelWidth","openSnackbar","setOpenSnackbar","handleChange","name","Date","getTime","current","offsetWidth","multiline","rows","FormControl","InputLabel","ref","htmlFor","Select","native","inputProps","allNodes","allNodesObject","rowExists","push","setNotes","ModalBase","findId","Dialog","aria-labelledby","DialogTitle","DialogContent","updateId","findItem","ShowModal","today","date","getFullYear","getMonth","getDate","source","escapeHtml","createMuiTheme","responsiveFontSizes","MainComponent","xs","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f10d554.chunk.js","sourcesContent":["const LocalStorage = {};\n\nLocalStorage.get = key => {\n  return localStorage.getItem(key);\n};\nLocalStorage.set = (key, value) => {\n  return localStorage.setItem(key, value);\n};\nLocalStorage.remove = key => {\n  return localStorage.removeItem(key);\n};\n/**\n * get all notes\n **/\nLocalStorage.getNotes = () => {\n  return LocalStorage.get(\"notes\");\n};\n\n/**\n * get all notes of notebooks\n **/\nLocalStorage.getNotebooks = notebook => {\n  return LocalStorage.get(notebook);\n};\n\n/**\n * set a group of Notes\n **/\nLocalStorage.setNotes = value => {\n  LocalStorage.set(\"notes\", value);\n};\n\n/**\n * remove Notes\n **/\nLocalStorage.rmNotes = () => {\n  LocalStorage.remove(\"notes\");\n};\n\n/**\n * remove Notes\n **/\nLocalStorage.rmNoteBook = notebok => {\n  LocalStorage.remove(notebok);\n};\n\n/**\n * get a note by index\n **/\nLocalStorage.note = id => {\n  if (LocalStorage.getNotes() !== null) {\n    const List = JSON.parse(LocalStorage.getNotes());\n    return List[id];\n  }\n  return [];\n};\n\n/**\n * check that note exists by id\n **/\nLocalStorage.rowExists = object => {\n  const List = JSON.parse(LocalStorage.getNotes());\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\n/**\n * check that note exists by id in specific notebook\n **/\nLocalStorage.rowExistsIn = (notebook, object) => {\n  const List = JSON.parse(localStorage.getItem(notebook));\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\nLocalStorage.getAllNotes = () => {\n  let Lenguajes = LocalStorage.getNotebooks(\"Lenguajes Prog.\");\n  let Experiencia = LocalStorage.getNotebooks(\"Experiencia Usuario\");\n  let Diseno = LocalStorage.getNotebooks(\"Diseno S.Logicos\");\n  let Notes = LocalStorage.getNotebooks(\"notes\");\n  let All;\n  Lenguajes = Lenguajes !== null ? JSON.parse(Lenguajes) : [];\n  Experiencia = Experiencia !== null ? JSON.parse(Experiencia) : [];\n  Diseno = Diseno !== null ? JSON.parse(Diseno) : [];\n  Notes = Notes !== null ? JSON.parse(Notes) : [];\n  All = [...Lenguajes, ...Experiencia, ...Diseno, ...Notes];\n\n  return All;\n};\n/**\n * get node by id\n **/\nLocalStorage.findId = id => {\n  const List = LocalStorage.getAllNotes();\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\n/**\n * update a note by id\n **/\nLocalStorage.updateId = (id, itemObject) => {\n  const List = JSON.parse(\n    LocalStorage.getNotebooks(\n      itemObject.notebook === \"\" ? \"notes\" : itemObject.notebook\n    )\n  );\n\n  let notebookIs = itemObject.notebook;\n  if (List !== null && List.length > 0) {\n    const updatedList = List.filter(item => {\n      if (id === item.id) {\n        const { title, message, category } = itemObject;\n        item.title = title;\n        item.message = message;\n        item.category = category;\n      }\n      return item;\n    });\n    LocalStorage.set(\n      notebookIs === \"\" ? \"notes\" : notebookIs,\n      JSON.stringify(updatedList)\n    );\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default LocalStorage;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\nexport const initialState = {\n  notes: [],\n  modal: false,\n  edit: null,\n  show: null,\n  showModal: false\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"newNote\":\n      return {\n        ...state,\n        notes: action.notes\n      };\n    case \"openModal\":\n      return {\n        ...state,\n        modal: action.modal,\n        edit: action.edit\n      };\n    case \"showMessage\":\n      return {\n        ...state,\n        showModal: action.showModal,\n        show: action.show\n      };\n\n    default:\n      return state;\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nexport const useNoteStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: \"#F7F2E0\",\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  button: {\n \n    position: \"relative\",\n    top: \"10px\"\n  },\n  title: {\n    wordBreak: \"break-all\",\n    paddingBottom: 10\n  }\n}));\n\nexport const useListStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  margin: {\n    marginTop: 8\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    marginTop: theme.spacing(1) + \"px !important\",\n    marginBottom: theme.spacing(1) + \"px !important\",\n    width: \"100% !important\"\n  },\n  moveToSelect: {\n    backgroundColor: \"#ccc !important\",\n    color: \"#333 !important\"\n  }\n}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useNoteStyles as useStyles } from \"./styles\";\n//import Checkbox from \"@material-ui/core/Checkbox\";\n\n\n\nfunction Note(props) {\n  const { item, row } = props;\n  const { id, title, category } = item;\n // const [checkbox, setCheckbox] = React.useState(false);\n  const classes = useStyles();\n  const [, dispatch] = useStateValue();\n\n\n\n  function deleteNote() {\n    const NoteBookOfTheNote = item.notebook;\n    let getObjectsOfTheNoteBook = JSON.parse(\n      LocalStorage.getNotebooks(NoteBookOfTheNote)\n    );\n    if (getObjectsOfTheNoteBook === null) {\n      getObjectsOfTheNoteBook = JSON.parse(LocalStorage.getNotes());\n    }\n\n    let removeNote = getObjectsOfTheNoteBook.filter(\n      note => note.id !== item.id\n    );\n    LocalStorage.rmNoteBook(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n    );\n    LocalStorage.set(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote,\n      JSON.stringify(removeNote)\n    );\n\n    dispatch({ type: \"newNote\", notes: removeNote });\n  }\n\n \n\n  function showNote() {\n    dispatch({ type: \"showMessage\", showModal: true, show: id });\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <Grid container>\n        <div className={title}>\n          {row + 1}- {title}\n        </div>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid container>\n        <ButtonGroup\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n          className={classes.button}\n        >\n          <Button variant=\"outlined\" color=\"secondary\" onClick={deleteNote}>\n            Eliminar\n          </Button>\n         \n          <Button variant=\"outlined\" color=\"primary\" onClick={showNote}>\n            Leer Nota\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Note from \"./Note\";\nimport { useStateValue } from \"../../statemanagement\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n//import Button from \"@material-ui/core/Button\";\n//import ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { useListStyles as useStyles } from \"./styles\";\n//import InputLabel from \"@material-ui/core/InputLabel\";\n//import FormControl from \"@material-ui/core/FormControl\";\n//import Select from \"@material-ui/core/Select\";\n\nfunction NotesList() {\n  const classes = useStyles();\n  const [{ notes }, dispatch] = useStateValue();\n  const [mainData, setMainData] = useState([]);\n  const [state, setState] = useState(\"\");\n  const [notebookDropDown, setNotebookDropDown] = useState(\"\");\n  const [stateCategory, setStateCategory] = useState(\"\");\n  //const [checkboxes, setCheckboxes] = useState([]);\n\n  /**\n   * Find the object with complexicity O(n2)\n   **/\n  function searchFor(keyword, key, array) {\n    const toSearch = keyword.toLowerCase();\n    return array.filter(data => {\n      return data[key]!==undefined && data[key].toLowerCase().includes(toSearch)\n    });\n  }\n\n  /**\n   * Para buscar por etiquetas\n   **/\n  function search(event) {\n    const value = event.target.value;\n    setState(value);\n    setStateCategory(\"\");\n    const searched = searchFor(value, \"title\", notes);\n    if (searched.length > 0) {\n      setMainData(searched);\n    }\n    if (value.length === 0) {\n      setMainData(notes);\n    }\n  }\n\n\n\n  /**\n   * handle check boxes to move into note books\n   **/\n  /*function handleCheckbox(state, id) {\n    if (state) {\n      setCheckboxes([...checkboxes, id]);\n    } else {\n      const index = checkboxes.indexOf(id);\n      checkboxes.splice(index, 1);\n      if (checkboxes.length === 0) {\n        setCheckboxes([]);\n      } else {\n        setCheckboxes(checkboxes);\n      }\n    }\n  }*/\n\n  /**\n   * Handle Move notes to another notebook\n   **/\n  \n\n  React.useEffect(() => {\n    setMainData(notes);\n  }, [notes]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Notes\n      </Typography>\n\n      <TextField\n        value={state}\n        id=\"outlined-textarea\"\n        label=\"Buscar por Etiqueta\"\n        placeholder=\"Etiqueta1, Etiqueta2 ...\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={e => search(e)}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon />\n            </InputAdornment>\n          )\n        }}\n      />\n\n     \n\n    \n\n      <div className={classes.margin}>\n        {mainData.length > 0 &&\n          mainData.map((item, index) => (\n            <Note\n              //setCheckbox={handleCheckbox}\n              row={index}\n              item={item}\n              key={item.id}\n            />\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotesList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useListStyles = makeStyles(theme => ({\n  noteBooksContainer: {\n    backgroundColor: \"#E6E6E6\",\n    minHeight: \"100%\"\n  },\n  noteBookList: {\n    cursor: \"pointer\"\n  },\n  active: {\n    backgroundColor: \"#ccc\"\n  }\n}));\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useStateValue } from \"../../statemanagement\";\nimport { useListStyles as useStyles } from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LocalStorage from \"../../Utils/localStorage\";\n\n\nfunction NoteBooks() {\n  const classes = useStyles();\n  const [activeNote, setActiveNote] = useState(\"all\");\n  const [, dispatch] = useStateValue();\n\n  /**\n   * show a list of notes of a notebook and dispatch it into Context\n   **/\n  function showNotesOf(Notebook) {\n    let Lenguajes = LocalStorage.getNotebooks(\"Lenguajes Prog.\");\n    let Experiencia = LocalStorage.getNotebooks(\"Experiencia Usuario\");\n    let Diseno = LocalStorage.getNotebooks(\"Diseno S.Logicos\");\n    let Notes = LocalStorage.getNotebooks(\"notes\");\n    setActiveNote(Notebook);\n    if (Notebook === \"all\") {\n      let All;\n      Lenguajes = Lenguajes !== null ? JSON.parse(Lenguajes) : [];\n      Experiencia = Experiencia !== null ? JSON.parse(Experiencia) : [];\n      Diseno = Diseno !== null ? JSON.parse(Diseno) : [];\n      Notes = Notes !== null ? JSON.parse(Notes) : [];\n      All = [...Lenguajes, ...Experiencia, ...Diseno, ...Notes];\n      if (All.length > 0) {\n        dispatch({ type: \"newNote\", notes: All });\n      }\n    } else {\n      let Notes;\n      if (Notebook === \"Lenguajes Prog.\") {\n        Notes = Lenguajes;\n      }\n      if (Notebook === \"Experiencia Usuario\") {\n        Notes = Experiencia;\n      }\n      if (Notebook === \"Diseno S.Logicos\") {\n        Notes = Diseno;\n      }\n\n      Notes = Notes !== null ? JSON.parse(Notes) : [];\n      dispatch({ type: \"newNote\", notes: Notes });\n    }\n  }\n\n  return (\n    \n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Clases\n      </Typography>\n\n      <div className={classes.noteBooksContainer} >\n        <div className={classes.demo}>\n          <List dense={false}>\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"all\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"all\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Ver Todo\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"Lenguajes Prog.\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"Lenguajes Prog.\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Lenguajes Prog.\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"Experiencia Usuario\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"Experiencia Usuario\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Experiencia Usuario\" />\n            </ListItem>\n\n            <ListItem\n              className={[\n                classes.noteBookList,\n                activeNote === \"Diseno S.Logicos\" && classes.active\n              ].join(\" \")}\n              onClick={() => showNotesOf(\"Diseno S.Logicos\")}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <FolderIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"Diseno S.Logicos\" />\n            </ListItem>\n          </List>\n        </div>\n      </div>\n    </React.Fragment>\n    \n  );\n}\n\nexport default NoteBooks;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport const snackBarStyle = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { snackBarStyle as useStyles } from \"./styles\";\n\nexport default function CustomSnackbar(props) {\n  const classes = useStyles();\n  const { setClose, open: openSnack } = props;\n  const [open, setOpen] = React.useState();\n  /**\n   * set open/false state to show/hide Snackbar\n   **/\n  React.useEffect(() => {\n    setOpen(openSnack);\n  }, [openSnack]);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setClose();\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">Note with this id exists</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LocalStorage from \"../../Utils/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport { useStyles } from \"./styles\";\nimport CustomSnackbar from \"./Snackbar\";\n//import Chip from '@material-ui/core/Chip';\n\n/*const names = [\n  'Framework',\n  'BackEnd',\n  'FrontEnd',\n  'Experiencia',\n  'Programacion',\n  'Javascript'\n];*/\n\n\nfunction CreateNote() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    id: 0,\n    category: \"\",\n    notebook: \"\",\n    message: \"\",\n    title: \"\"\n  });\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [, dispatch] = useStateValue();\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  /**\n   * handle change inputs\n   **/\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value,\n      id: new Date().getTime()\n    });\n  }\n\n  /**\n   * Add notes inside of localStorage and context api\n   **/\n  function addToNotes() {\n    //note book is not set, so set the Note in \"Note\" object\n    if (state.notebook === \"\") {\n      const allNodes = LocalStorage.getNotes();\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.setNotes(JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    } else {\n      const allNodes = LocalStorage.getNotebooks(state.notebook);\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      //set the note inside note book\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.set(state.notebook, JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    }\n  }\n\n  /**\n   * On component Did mount , send data from localStorage into context api\n   **/\n  React.useEffect(() => {\n    let All;\n    let Lenguajes = LocalStorage.getNotebooks(\"Lenguajes Prog.\");\n    let Experiencia = LocalStorage.getNotebooks(\"Experiencia Usuario\");\n    let Diseno = LocalStorage.getNotebooks(\"Diseno S.Logicos\");\n    let Notes = LocalStorage.getNotebooks(\"notes\");\n\n    Lenguajes = Lenguajes !== null ? JSON.parse(Lenguajes) : [];\n    Experiencia = Experiencia !== null ? JSON.parse(Experiencia) : [];\n    Diseno = Diseno !== null ? JSON.parse(Diseno) : [];\n    Notes = Notes !== null ? JSON.parse(Notes) : [];\n    All = [...Lenguajes, ...Experiencia, ...Diseno, ...Notes];\n    if (All.length > 0) {\n      dispatch({ type: \"newNote\", notes: All });\n    }\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Añadir Una nota\n      </Typography>\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Escribe tu mensaje\"\n        placeholder=\"Apunte...\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => handleChange(\"message\", e)}\n        rows={10}\n        fullWidth\n      />\n\n\n\n\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Etiquetas\"\n        placeholder=\"Etiqueta1, Etiqueta2, Etiqueta3 ...\"\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={e => handleChange(\"title\", e)}\n      />\n\n      \n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-notebook-native-simple\">\n          Lista de Cursos\n        </InputLabel>\n        <Select\n          native\n          value={state.notebook}\n          onChange={e => handleChange(\"notebook\", e)}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: \"notebook\",\n            id: \"outlined-notebook-native-simple\"\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Lenguajes Prog.\"}>Lenguajes Prog.</option>\n          <option value={\"Experiencia Usuario\"}>Experiencia Usuario</option>\n          <option value={\"Diseno S.Logicos\"}>Diseno S.Logicos</option>\n        </Select>\n      </FormControl>\n\n      \n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={addToNotes}\n      >\n        Guardar Nota\n      </Button>\n      <CustomSnackbar\n        open={openSnackbar}\n        setClose={() => setOpenSnackbar(false)}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CreateNote;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalStorage from \"../Utils/localStorage\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport default function ModalBase() {\n  const [{ modal, edit }, dispatch] = useStateValue();\n  const inputLabel = React.useRef(null);\n  const [labelWidth] = React.useState(0);\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  const handleClose = () => {\n    dispatch({ type: \"openModal\", modal: false });\n  };\n\n  function addToNotes() {\n    if (LocalStorage.updateId(edit, state)) {\n      dispatch({\n        type: \"newNote\",\n        notes: []\n      });\n      const findItem = LocalStorage.findId(edit)[0];\n      const allNodes = JSON.parse(\n        LocalStorage.getNotebooks(\n          findItem.notebook === \"\" ? \"notes\" : findItem.notebook\n        )\n      );\n\n      dispatch({\n        type: \"newNote\",\n        notes: allNodes\n      });\n      handleClose();\n    }\n  }\n\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n  }\n\n  React.useEffect(() => {\n    if (edit !== null) {\n      const rowExists = LocalStorage.findId(edit);\n      if (rowExists.length > 0) {\n        setState(rowExists[0]);\n      }\n    }\n  }, [edit]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Dialog\n        label\n        open={modal}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={state !== undefined && state.title}\n            id=\"outlined-textarea\"\n            label=\"Title\"\n            placeholder=\"Write your title\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => handleChange(\"title\", e)}\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n              Categoriasdsada\n            </InputLabel>\n            <Select\n              native\n              value={state !== undefined && state.category}\n              onChange={e => handleChange(\"category\", e)}\n              labelWidth={labelWidth}\n              inputProps={{\n                name: \"age\",\n                id: \"outlined-age-native-simple\"\n              }}\n            >\n              <option value=\"\" />\n              <option value={\"Family\"}>Family</option>\n              <option value={\"Work\"}>Work</option>\n              <option value={\"Friends\"}>Friends</option>\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={state !== undefined && state.message}\n            id=\"outlined-textarea\"\n            label=\"Write your Message\"\n            placeholder=\"Write your note\"\n            multiline\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={e => handleChange(\"message\", e)}\n            rows={10}\n            fullWidth\n          />\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={addToNotes}\n          >\n            Edit Note\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport LocalStorage from \"../Utils/localStorage\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport default function ShowModal() {\n  const [{ showModal, show }, dispatch] = useStateValue();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  var today = new Date(),\n  date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n  const handleClose = () => {\n    dispatch({ type: \"showMessage\", showModal: false });\n  };\n\n  React.useEffect(() => {\n    const rowExists = LocalStorage.findId(show);\n    if (rowExists.length > 0) {\n      setState(rowExists[0]);\n    }\n  }, [show]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, [show]);\n\n  return (\n    <React.Fragment>\n      {state !== undefined && (\n        <Dialog\n          fullWidth\n          open={showModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{state.title}</DialogTitle>\n          <DialogContent>\n            <Typography color={\"primary\"} variant=\"caption\">\n              Fecha : {date}\n            </Typography>\n            <Divider />\n            <ReactMarkdown source={state.message} escapeHtml={false} />\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#EFF8FB\",\n    padding: theme.spacing(3, 2),\n    width: \"90%\",\n    margin: \"0 auto\",\n    marginTop: 100\n  }\n}));\n","import React from \"react\";\nimport NotesList from \"../NotesList\";\nimport NoteBooks from \"../NoteBooks\";\nimport CreateNote from \"../CreateNote\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { StateProvider, initialState, reducer } from \"../../statemanagement\";\nimport ModalBase from \"../../Utils/Modal\";\nimport ShowModal from \"../../Utils/ShowModal\";\nimport { useStyles } from \"./styles\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  MuiThemeProvider,\n} from \"@material-ui/core\";\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\n\nfunction MainComponent() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n    <MuiThemeProvider theme={theme}>\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Grid container spacing={3}>\n          <StateProvider initialState={initialState} reducer={reducer}>\n            <React.Fragment>\n              <ModalBase />\n              <ShowModal />\n              <Grid item xs={2}>\n                <NoteBooks />\n              </Grid>\n              <Grid item xs={5}>\n                <NotesList />\n              </Grid>\n              <Grid item xs={5}>\n                <CreateNote />\n              </Grid>\n            </React.Fragment>\n          </StateProvider>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n    </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default MainComponent;\n","import React from \"react\";\nimport MainComponent from \"./components/MainComponent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}